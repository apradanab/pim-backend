generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String            @id @default(uuid())
  name         String
  email        String            @unique
  password     String?
  role         Role              @default(GUEST)
  approved     Boolean           @default(false)
  message      String?
  avatar       String?
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  appointments AppointmentUser[]
}

model Appointment {
  id         String            @id @default(uuid())
  date       DateTime
  startTime  DateTime
  endTime    DateTime
  status     AppointmentStatus @default(AVAILABLE)
  therapyId  String
  notes      String?
  adminNotes String?
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  therapy    Therapy           @relation(fields: [therapyId], references: [id], onDelete: Cascade)
  users      AppointmentUser[]
}

model AppointmentUser {
  id            String      @id @default(uuid())
  appointmentId String
  userId        String
  approved      Boolean     @default(false)
  createdAt     DateTime    @default(now())
  appointment   Appointment @relation(fields: [appointmentId], references: [id], onDelete: Cascade)
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([appointmentId, userId])
}

model Therapy {
  id           String        @id @default(uuid())
  title        String
  description  String
  content      String
  image        String
  isGroup      Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  appointments Appointment[]
  advices    Advice[]
}

model Advice {
  id          String   @id @default(uuid())
  title       String
  description String
  content     String
  image       String
  therapyId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  therapy     Therapy  @relation(fields: [therapyId], references: [id], onDelete: Cascade)
}

enum Role {
  GUEST
  USER
  ADMIN
}

enum AppointmentStatus {
  PENDING
  OCCUPIED
  COMPLETED
  CANCELLED
  AVAILABLE
}
